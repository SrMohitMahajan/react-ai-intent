(function(t,e){typeof exports=="object"&&typeof module<"u"?e(exports,require("react")):typeof define=="function"&&define.amd?define(["exports","react"],e):(t=typeof globalThis<"u"?globalThis:t||self,e(t["react-ai-intent"]={},t.React))})(this,function(t,e){"use strict";function I(o,{actions:r,apiKey:s,provider:i="openai",model:c=i==="gemini"?"gemini-pro":"gpt-3.5-turbo",debounceMs:x=300,temperature:O=.2}){const[$,u]=e.useState(null),[v,l]=e.useState(!1),[C,f]=e.useState(null),a=e.useRef(null);return e.useEffect(()=>{!o||!s||(a.current&&clearTimeout(a.current),a.current=setTimeout(async()=>{var d,p,h,m,g,y,S,T,w,b;l(!0),f(null);try{let n="";const j=`Given the user input: "${o}"
Select the best matching intent from the following list: [${r.join(", ")}]
Respond with only the selected intent.`;if(i==="openai"?n=(m=(h=(p=(d=(await(await fetch("https://api.openai.com/v1/chat/completions",{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${s}`},body:JSON.stringify({model:c,messages:[{role:"user",content:j}],temperature:O})})).json()).choices)==null?void 0:d[0])==null?void 0:p.message)==null?void 0:h.content)==null?void 0:m.trim():i==="gemini"&&(n=(b=(w=(T=(S=(y=(g=(await(await fetch(`https://generativelanguage.googleapis.com/v1beta/models/${c}:generateContent?key=${s}`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({contents:[{parts:[{text:j}]}]})})).json()).candidates)==null?void 0:g[0])==null?void 0:y.content)==null?void 0:S.parts)==null?void 0:T[0])==null?void 0:w.text)==null?void 0:b.trim()),n&&r.includes(n))u(n);else throw new Error("Could not match a valid intent.")}catch(n){f(n),u(null)}finally{l(!1)}},x))},[o]),{intent:$,isLoading:v,error:C}}t.useAIIntent=I,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})});
